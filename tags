!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3671ad72/
0	coc-settings.json	/^        "css",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
0	coc-settings.json	/^        "javascript",$/;"	s	array:eslint.filetypes
1	coc-settings.json	/^        "json",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
1	coc-settings.json	/^        "typescript"$/;"	s	array:eslint.filetypes
2	coc-settings.json	/^        "markdown",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
3	coc-settings.json	/^        "html",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
4	coc-settings.json	/^        "js",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
5	coc-settings.json	/^        "ts",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
6	coc-settings.json	/^        "javascript",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
7	coc-settings.json	/^        "typescript"$/;"	s	array:coc.preferences.formatOnSaveFiletypes
<C-F>	.vimrc	/^nnoremap <C-F> :Ag<CR>$/;"	m
<C-b>	rcfiles/coc.vim	/^nmap <silent><C-b> <Plug>(coc-definition)$/;"	m
<C-h>	rcfiles/coc.vim	/^nmap <silent><C-h> <Plug>(coc-definition) :wincmd s<CR> :wincmd w<CR> :resize 15<CR> $/;"	m
<C-l>	.vimrc	/^nnoremap <C-l> <C-i>$/;"	m
<C-n>	.vimrc	/^nnoremap <C-n> :FZF<Enter>$/;"	m
<Leader>+	.vimrc	/^nnoremap <silent> <Leader>+ :vertical resize +5<CR>$/;"	m
<Leader>-	.vimrc	/^nnoremap <silent> <Leader>- :vertical resize -5<CR>$/;"	m
<S-TAB>	rcfiles/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	rcfiles/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<TAB>	rcfiles/coc.vim	/^nmap <silent> <TAB> <Plug>(coc-range-select)$/;"	m
<TAB>	rcfiles/coc.vim	/^xmap <silent> <TAB> <Plug>(coc-range-select)$/;"	m
<cr>	rcfiles/coc.vim	/^inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	rcfiles/coc.vim	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<leader><CR>	rcfiles/coc.vim	/^nmap <leader><CR> <Plug>(coc-codeaction)$/;"	m
<leader>f	rcfiles/coc.vim	/^ vmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	rcfiles/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>qf	rcfiles/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>r	.vimrc	/^nnoremap <leader>r :!%:p<Enter>$/;"	m
<leader>t	.vimrc	/^nmap <silent> <leader>t :NERDTreeTabsToggle<CR>$/;"	m
K	rcfiles/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
Prettier	rcfiles/coc.vim	/^command! -nargs=0 Prettier :CocCommand prettier.formatFile$/;"	c
coc.preferences.formatOnSaveFiletypes	coc-settings.json	/^    "coc.preferences.formatOnSaveFiletypes": [$/;"	a
eslint.enable	coc-settings.json	/^    "eslint.enable": true,$/;"	b
eslint.filetypes	coc-settings.json	/^    "eslint.filetypes": [$/;"	a
g:airline_powerline_fonts	.vimrc	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_theme	.vimrc	/^let g:airline_theme='zenburn'$/;"	v
g:closetag_filetypes	.vimrc	/^let g:closetag_filetypes = 'html,xhtml,phtml,javascript,typescript'$/;"	v
g:closetag_regions	.vimrc	/^let g:closetag_regions = {$/;"	v
g:htl_all_templates	.vimrc	/^let g:htl_all_templates = 1$/;"	v
g:htl_css_templates	.vimrc	/^let g:htl_css_templates = 1 $/;"	v
g:nerdtree_tabs_open_on_console_startup	.vimrc	/^let g:nerdtree_tabs_open_on_console_startup = 0$/;"	v
gi	rcfiles/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	rcfiles/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	rcfiles/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
mapleader	.vimrc	/^let mapleader = " "$/;"	v
s:check_back_space	rcfiles/coc.vim	/^function! s:check_back_space() abort$/;"	f
s:show_documentation	rcfiles/coc.vim	/^function! s:show_documentation()$/;"	f
